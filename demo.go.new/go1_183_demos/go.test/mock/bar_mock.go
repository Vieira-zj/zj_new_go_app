// Code generated by MockGen. DO NOT EDIT.
// Source: ./bar.go

// Package mocktest is a generated GoMock package.
package mocktest

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBar is a mock of Bar interface.
type MockBar struct {
	ctrl     *gomock.Controller
	recorder *MockBarMockRecorder
}

// MockBarMockRecorder is the mock recorder for MockBar.
type MockBarMockRecorder struct {
	mock *MockBar
}

// NewMockBar creates a new mock instance.
func NewMockBar(ctrl *gomock.Controller) *MockBar {
	mock := &MockBar{ctrl: ctrl}
	mock.recorder = &MockBarMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBar) EXPECT() *MockBarMockRecorder {
	return m.recorder
}

// Foo mocks base method.
func (m *MockBar) Foo(x int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Foo", x)
	ret0, _ := ret[0].(int)
	return ret0
}

// Foo indicates an expected call of Foo.
func (mr *MockBarMockRecorder) Foo(x interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Foo", reflect.TypeOf((*MockBar)(nil).Foo), x)
}
